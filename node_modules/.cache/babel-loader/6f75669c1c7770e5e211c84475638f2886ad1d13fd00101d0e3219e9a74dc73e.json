{"ast":null,"code":"var _jsxFileName = \"/Users/angelagu/Downloads/aiyogi-main/src/pages/home/components/searchSoulTribe.jsx\",\n  _s = $RefreshSig$();\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { v7 as uuidv7 } from 'uuid';\nimport searchIcon from \"../../../assets/images/plane-icon.svg\";\nimport soultribeImg from \"../../../assets/images/soultribe.jpeg\";\nimport { fetchStreamData } from \"../home.api\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchSoulTribe = ({\n  chatQuestion,\n  data,\n  relatedQuestions\n}) => {\n  _s();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  const [input, setInput] = useState('');\n  const [streamedData, setStreamedData] = useState('');\n  const [fetching, setFetching] = useState(false);\n  const [threadId, setThreadId] = useState(uuidv7());\n  const [messages, setMessages] = useState([]);\n  const scrollableRef = useRef(null);\n  const [isActive, setIsActive] = useState(false);\n  const [streamedChunks, setStreamedChunks] = useState([]);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [lastSentByVoice, setLastSentByVoice] = useState(false);\n  const description = data === null || data === void 0 ? void 0 : data.shortDescription;\n  let bannerImage;\n  let moduleId;\n  if (data === null) {\n    bannerImage = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: soultribeImg,\n      alt: \"Default Banner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this);\n    moduleId = '070b458f-fc28-403f-84c7-429b8bff1103';\n  } else {\n    bannerImage = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.posterImageUrl,\n      alt: \"Banner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this);\n    moduleId = data.id;\n  }\n  const {\n    refetch\n  } = useQuery({\n    queryKey: ['streamData'],\n    queryFn: async () => {\n      setFetching(true);\n      const payload = {\n        moduleId: moduleId,\n        threadId: threadId,\n        message: input,\n        stream: true\n      };\n      const response = await fetchStreamData(payload, setStreamedData);\n      setFetching(false);\n      return response;\n    },\n    enabled: false\n  });\n  const onConverStart = (customInput = null) => {\n    const messageToSend = customInput !== null && customInput !== void 0 ? customInput : input;\n    if (!messageToSend.trim()) return;\n    setIsActive(true);\n    setMessages(prev => [...prev, {\n      type: \"question\",\n      text: messageToSend,\n      id: uuidv7()\n    }, {\n      type: \"answer\",\n      text: \"\",\n      id: uuidv7()\n    }]);\n    refetch().then(() => {\n      setInput('');\n    });\n  };\n  useEffect(() => {\n    if (!listening && transcript.trim()) {\n      setLastSentByVoice(true);\n      onConverStart(transcript);\n      resetTranscript();\n    }\n  }, [listening, transcript]);\n  useEffect(() => {\n    if (streamedData && streamedData !== \"\") {\n      setMessages(prev => {\n        const updatedMessages = [...prev];\n        updatedMessages[updatedMessages.length - 1] = {\n          ...updatedMessages[updatedMessages.length - 1],\n          text: streamedData\n        };\n        return updatedMessages;\n      });\n      if (scrollableRef.current) {\n        scrollableRef.current.scrollTop = scrollableRef.current.scrollHeight;\n      }\n      if (lastSentByVoice) {\n        const timeoutId = setTimeout(() => {\n          speakResponse(streamedData);\n          setLastSentByVoice(false);\n        }, 1000);\n        return () => clearTimeout(timeoutId);\n      }\n    }\n  }, [streamedData]);\n\n  // 🔥 Updated speakResponse function (uses OpenAI TTS)\n  const speakResponse = async text => {\n    try {\n      const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n      const response = await fetch('https://api.openai.com/v1/audio/speech', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"tts-1\",\n          // correct model\n          input: text,\n          voice: \"coral\"\n        })\n      });\n      if (!response.ok) {\n        throw new Error('TTS API request failed');\n      }\n      const blob = await response.blob();\n      const audioUrl = URL.createObjectURL(blob);\n      const audio = new Audio(audioUrl);\n      audio.play();\n      setIsSpeaking(true);\n      audio.onended = () => {\n        setIsSpeaking(false);\n        URL.revokeObjectURL(audioUrl); // cleanup\n      };\n    } catch (error) {\n      console.error('Error during TTS:', error);\n      setIsSpeaking(false);\n    }\n  };\n  const handleVoiceToggle = () => {\n    if (listening) {\n      SpeechRecognition.stopListening();\n    } else {\n      resetTranscript();\n      SpeechRecognition.startListening({\n        continuous: false\n      });\n    }\n  };\n  const handleQuestionClick = question => {\n    // setInput(question);\n    onConverStart(question);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative flex items-center justify-center z-10 bannerSearch pt-2 ${isActive ? 'active' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"predefineQuestion description lg:mb-20 mt-10 mb-10\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatname mb-2\",\n      children: bannerImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"predefineQuestion\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"predefineQues-item\",\n        onClick: () => handleQuestionClick('what is your legacy, lol!?'),\n        children: \"what is your legacy, lol!?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"predefineQues-item\",\n        onClick: () => handleQuestionClick('Do you remember your dreams?'),\n        children: \"Do you remember your dreams?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"predefineQues-item\",\n        onClick: () => handleQuestionClick('WHO LOVES YA?!'),\n        children: \"WHO LOVES YA?!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scrollableRef,\n      className: \"overflow-y-auto scrollbar-hide chat-anwserScreen\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-1 ${msg.type === \"question\" ? \"border border-yellow-500 text-yellow-500 rounded-[1vw] self-start ques\" : \"bg-[#71717914] backdrop-blur-[145px] mt-3 mb-3 text-white self-end rounded-[1vw] awn\"}`,\n        children: msg.text === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 44\n        }, this) : msg.text\n      }, (msg === null || msg === void 0 ? void 0 : msg.id) || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative p-6 rounded-2xl flex items-center w-full chatsearchbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"soutribeSearch\",\n        onKeyUp: e => {\n          if (e.key === \"Enter\") {\n            onConverStart();\n          }\n        },\n        onChange: e => setInput(e.target.value),\n        type: \"text\",\n        placeholder: \"Type Here\",\n        disabled: fetching,\n        value: input,\n        className: \"flex-1 bg-transparent text-white outline-none placeholder-gray-400 text-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), !isSpeaking ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleVoiceToggle,\n        className: `ml-2 p-2 rounded-full hidden  ${listening ? 'bg-green-500' : 'bg-white'} text-black`,\n        children: \"\\uD83C\\uDFA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsSpeaking(false),\n        className: \"ml-2 p-2 rounded-full bg-red-500 text-white\",\n        children: \"\\u23F9\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: fetching || input === \"\",\n        onClick: () => onConverStart(),\n        className: \"bg-white text-black py-2 px-2 rounded-full hover:bg-gray-100 transition-colors font-medium searchbtn\",\n        children: fetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin border-t-2 border-b-2 border-gray-900 rounded-full w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: searchIcon,\n          alt: \"Search Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchSoulTribe, \"bllHPNTKcNI2KFVOnKutzkCuogI=\", false, function () {\n  return [useSpeechRecognition, useQuery];\n});\n_c = SearchSoulTribe;\nexport default SearchSoulTribe;\nvar _c;\n$RefreshReg$(_c, \"SearchSoulTribe\");","map":{"version":3,"names":["useMutation","useQuery","React","useEffect","useRef","useState","useLocation","v7","uuidv7","searchIcon","soultribeImg","fetchStreamData","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","SearchSoulTribe","chatQuestion","data","relatedQuestions","_s","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","input","setInput","streamedData","setStreamedData","fetching","setFetching","threadId","setThreadId","messages","setMessages","scrollableRef","isActive","setIsActive","streamedChunks","setStreamedChunks","isSpeaking","setIsSpeaking","lastSentByVoice","setLastSentByVoice","description","shortDescription","bannerImage","moduleId","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","posterImageUrl","id","refetch","queryKey","queryFn","payload","message","stream","response","enabled","onConverStart","customInput","messageToSend","trim","prev","type","text","then","updatedMessages","length","current","scrollTop","scrollHeight","timeoutId","setTimeout","speakResponse","clearTimeout","apiKey","process","env","REACT_APP_OPENAI_API_KEY","fetch","method","headers","Authorization","body","JSON","stringify","model","voice","ok","Error","blob","audioUrl","URL","createObjectURL","audio","Audio","play","onended","revokeObjectURL","error","console","handleVoiceToggle","stopListening","startListening","continuous","handleQuestionClick","question","className","children","onClick","ref","map","msg","index","onKeyUp","e","key","onChange","target","value","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/angelagu/Downloads/aiyogi-main/src/pages/home/components/searchSoulTribe.jsx"],"sourcesContent":["import { useMutation, useQuery } from \"@tanstack/react-query\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { v7 as uuidv7 } from 'uuid';\r\nimport searchIcon from \"../../../assets/images/plane-icon.svg\";\r\nimport soultribeImg from \"../../../assets/images/soultribe.jpeg\";\r\nimport { fetchStreamData } from \"../home.api\";\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\n\r\nconst SearchSoulTribe = ({ chatQuestion, data, relatedQuestions }) => {\r\n    const {\r\n        transcript,\r\n        listening,\r\n        resetTranscript,\r\n        browserSupportsSpeechRecognition\r\n    } = useSpeechRecognition();\r\n\r\n    const [input, setInput] = useState('');\r\n    const [streamedData, setStreamedData] = useState('');\r\n    const [fetching, setFetching] = useState(false);\r\n    const [threadId, setThreadId] = useState(uuidv7());\r\n    const [messages, setMessages] = useState([]);\r\n    const scrollableRef = useRef(null);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [streamedChunks, setStreamedChunks] = useState([]);\r\n    const [isSpeaking, setIsSpeaking] = useState(false);\r\n    const [lastSentByVoice, setLastSentByVoice] = useState(false);\r\n    const description = data?.shortDescription;\r\n\r\n    let bannerImage;\r\n    let moduleId;\r\n    if (data === null) {\r\n        bannerImage = <img src={soultribeImg} alt=\"Default Banner\" />;\r\n        moduleId = '070b458f-fc28-403f-84c7-429b8bff1103';\r\n    } else {\r\n        bannerImage = <img src={data.posterImageUrl} alt=\"Banner\" />;\r\n        moduleId = data.id;\r\n    }\r\n\r\n    const { refetch } = useQuery({\r\n        queryKey: ['streamData'],\r\n        queryFn: async () => {\r\n            setFetching(true);\r\n            const payload = {\r\n                moduleId: moduleId,\r\n                threadId: threadId,\r\n                message: input,\r\n                stream: true\r\n            };\r\n            const response = await fetchStreamData(payload, setStreamedData);\r\n            setFetching(false);\r\n            return response;\r\n        },\r\n        enabled: false,\r\n    });\r\n\r\n    const onConverStart = (customInput = null) => {\r\n        const messageToSend = customInput ?? input;\r\n        if (!messageToSend.trim()) return;\r\n\r\n        setIsActive(true);\r\n        setMessages(prev => [\r\n            ...prev,\r\n            { type: \"question\", text: messageToSend, id: uuidv7() },\r\n            { type: \"answer\", text: \"\", id: uuidv7() },\r\n        ]);\r\n        refetch().then(() => {\r\n            setInput('');\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!listening && transcript.trim()) {\r\n            setLastSentByVoice(true);\r\n            onConverStart(transcript);\r\n            resetTranscript();\r\n        }\r\n    }, [listening, transcript]);\r\n\r\n    useEffect(() => {\r\n        if (streamedData && streamedData !== \"\") {\r\n            setMessages((prev) => {\r\n                const updatedMessages = [...prev];\r\n                updatedMessages[updatedMessages.length - 1] = {\r\n                    ...updatedMessages[updatedMessages.length - 1],\r\n                    text: streamedData,\r\n                };\r\n                return updatedMessages;\r\n            });\r\n\r\n            if (scrollableRef.current) {\r\n                scrollableRef.current.scrollTop = scrollableRef.current.scrollHeight;\r\n            }\r\n\r\n            if (lastSentByVoice) {\r\n                const timeoutId = setTimeout(() => {\r\n                    speakResponse(streamedData);\r\n                    setLastSentByVoice(false);\r\n                }, 1000);\r\n\r\n                return () => clearTimeout(timeoutId);\r\n            }\r\n        }\r\n    }, [streamedData]);\r\n\r\n    // 🔥 Updated speakResponse function (uses OpenAI TTS)\r\n    const speakResponse = async (text) => {\r\n        try {\r\n            const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\r\n\r\n            const response = await fetch('https://api.openai.com/v1/audio/speech', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiKey}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    model: \"tts-1\", // correct model\r\n                    input: text,\r\n                    voice: \"coral\"\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('TTS API request failed');\r\n            }\r\n\r\n            const blob = await response.blob();\r\n            const audioUrl = URL.createObjectURL(blob);\r\n\r\n            const audio = new Audio(audioUrl);\r\n            audio.play();\r\n            setIsSpeaking(true);\r\n\r\n            audio.onended = () => {\r\n                setIsSpeaking(false);\r\n                URL.revokeObjectURL(audioUrl); // cleanup\r\n            };\r\n        } catch (error) {\r\n            console.error('Error during TTS:', error);\r\n            setIsSpeaking(false);\r\n        }\r\n    };\r\n\r\n\r\n    const handleVoiceToggle = () => {\r\n        if (listening) {\r\n            SpeechRecognition.stopListening();\r\n        } else {\r\n            resetTranscript();\r\n            SpeechRecognition.startListening({ continuous: false });\r\n        }\r\n    };\r\n\r\n    const handleQuestionClick = (question) => {\r\n        // setInput(question);\r\n        onConverStart(question);\r\n    };\r\n\r\n    return (\r\n        <div className={`relative flex items-center justify-center z-10 bannerSearch pt-2 ${isActive ? 'active' : ''}`}>\r\n            <p className=\"predefineQuestion description lg:mb-20 mt-10 mb-10\">{description}</p>\r\n            <div className=\"chatname mb-2\">\r\n                {bannerImage}\r\n            </div>\r\n            <div className=\"predefineQuestion\">\r\n                <div className=\"predefineQues-item\" onClick={() => handleQuestionClick('what is your legacy, lol!?')}>what is your legacy, lol!?</div>\r\n                <div className=\"predefineQues-item\" onClick={() => handleQuestionClick('Do you remember your dreams?')}>Do you remember your dreams?</div>\r\n                <div className=\"predefineQues-item\" onClick={() => handleQuestionClick('WHO LOVES YA?!')}>WHO LOVES YA?!</div>\r\n            </div>\r\n            <div ref={scrollableRef} className=\"overflow-y-auto scrollbar-hide chat-anwserScreen\">\r\n                {messages.map((msg, index) => (\r\n                    <div\r\n                        key={msg?.id || index}\r\n                        className={`p-1 ${msg.type === \"question\" ? \"border border-yellow-500 text-yellow-500 rounded-[1vw] self-start ques\" : \"bg-[#71717914] backdrop-blur-[145px] mt-3 mb-3 text-white self-end rounded-[1vw] awn\"}`}\r\n                    >\r\n                        {msg.text === \"\" ? <div className=\"loader\"></div> : msg.text}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"relative p-6 rounded-2xl flex items-center w-full chatsearchbar\">\r\n                <input\r\n                    id=\"soutribeSearch\"\r\n                    onKeyUp={(e) => {\r\n                        if (e.key === \"Enter\") {\r\n                            onConverStart();\r\n                        }\r\n                    }}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"Type Here\"\r\n                    disabled={fetching}\r\n                    value={input}\r\n                    className=\"flex-1 bg-transparent text-white outline-none placeholder-gray-400 text-lg\"\r\n                />\r\n\r\n                {!isSpeaking ? (\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={handleVoiceToggle}\r\n                        className={`ml-2 p-2 rounded-full hidden  ${listening ? 'bg-green-500' : 'bg-white'} text-black`}\r\n                    >\r\n                        🎤\r\n                    </button>\r\n                ) : (\r\n                    <button\r\n                        onClick={() => setIsSpeaking(false)}\r\n                        className=\"ml-2 p-2 rounded-full bg-red-500 text-white\"\r\n                    >\r\n                        ⏹️\r\n                    </button>\r\n                )}\r\n\r\n                <button\r\n                    disabled={fetching || input === \"\"}\r\n                    onClick={() => onConverStart()}\r\n                    className=\"bg-white text-black py-2 px-2 rounded-full hover:bg-gray-100 transition-colors font-medium searchbtn\"\r\n                >\r\n                    {fetching ? (\r\n                        <div className=\"animate-spin border-t-2 border-b-2 border-gray-900 rounded-full w-5 h-5\"></div>\r\n                    ) : (\r\n                        <img src={searchIcon} alt=\"Search Icon\" />\r\n                    )}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchSoulTribe;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}