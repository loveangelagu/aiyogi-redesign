{"ast":null,"code":"var _jsxFileName = \"/Users/angelagu/Downloads/aiyogi-main/src/pages/home/components/SearchSoulTribe3.jsx\",\n  _s = $RefreshSig$();\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { v7 as uuidv7 } from 'uuid';\nimport searchIcon from \"../../../assets/images/plane-icon.svg\";\nimport soultribeImg from \"../../../assets/images/media.jpg\";\nimport { fetchStreamData } from \"../home.api\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { createClient } from \"@supabase/supabase-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchSoulTribe = ({\n  chatQuestion,\n  data,\n  relatedQuestions\n}) => {\n  _s();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  const [input, setInput] = useState('');\n  const [streamedData, setStreamedData] = useState('');\n  const [fetching, setFetching] = useState(false);\n  const [threadId, setThreadId] = useState(uuidv7());\n  const [messages, setMessages] = useState([]);\n  const scrollableRef = useRef(null);\n  const [isActive, setIsActive] = useState(false);\n  const [streamedChunks, setStreamedChunks] = useState([]);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [lastSentByVoice, setLastSentByVoice] = useState(false);\n  const supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\n  const supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n  const supabase = createClient(supabaseUrl, supabaseAnonKey);\n  const [carouselId, setCarouselId] = useState(\"153714af-4a4d-4d6e-900c-9aae53206523\");\n  const [modules, setModules] = useState([]);\n  let bannerImage;\n  let moduleId;\n  if (data === null) {\n    bannerImage = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: soultribeImg,\n      alt: \"Default Banner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this);\n    moduleId = '070b458f-fc28-403f-84c7-429b8bff1103';\n  } else {\n    bannerImage = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.posterImageUrl,\n      alt: \"Banner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this);\n    moduleId = data.id;\n  }\n  const {\n    refetch\n  } = useQuery({\n    queryKey: ['streamData'],\n    queryFn: async () => {\n      setFetching(true);\n      const payload = {\n        moduleId: moduleId,\n        threadId: threadId,\n        message: input,\n        stream: true\n      };\n      const response = await fetchStreamData(payload, setStreamedData);\n      setFetching(false);\n      return response;\n    },\n    enabled: false\n  });\n  const onConverStart = (customInput = null) => {\n    const messageToSend = customInput !== null && customInput !== void 0 ? customInput : input;\n    if (!messageToSend.trim()) return;\n    setIsActive(true);\n    setMessages(prev => [...prev, {\n      type: \"question\",\n      text: messageToSend,\n      id: uuidv7()\n    }, {\n      type: \"answer\",\n      text: \"\",\n      id: uuidv7()\n    }]);\n    refetch().then(() => {\n      setInput('');\n    });\n  };\n  useEffect(() => {\n    if (!listening && transcript.trim()) {\n      setLastSentByVoice(true);\n      onConverStart(transcript);\n      resetTranscript();\n    }\n  }, [listening, transcript]);\n  useEffect(() => {\n    if (streamedData && streamedData !== \"\") {\n      setMessages(prev => {\n        const updatedMessages = [...prev];\n        updatedMessages[updatedMessages.length - 1] = {\n          ...updatedMessages[updatedMessages.length - 1],\n          text: streamedData\n        };\n        return updatedMessages;\n      });\n      if (scrollableRef.current) {\n        scrollableRef.current.scrollTop = scrollableRef.current.scrollHeight;\n      }\n      if (lastSentByVoice) {\n        const timeoutId = setTimeout(() => {\n          speakResponse(streamedData);\n          setLastSentByVoice(false);\n        }, 1000);\n        return () => clearTimeout(timeoutId);\n      }\n    }\n  }, [streamedData]);\n\n  // 🔥 Updated speakResponse function (uses OpenAI TTS)\n  const speakResponse = async text => {\n    try {\n      const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n      const response = await fetch('https://api.openai.com/v1/audio/speech', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: \"tts-1\",\n          // correct model\n          input: text,\n          voice: \"coral\"\n        })\n      });\n      if (!response.ok) {\n        throw new Error('TTS API request failed');\n      }\n      const blob = await response.blob();\n      const audioUrl = URL.createObjectURL(blob);\n      const audio = new Audio(audioUrl);\n      audio.play();\n      setIsSpeaking(true);\n      audio.onended = () => {\n        setIsSpeaking(false);\n        URL.revokeObjectURL(audioUrl); // cleanup\n      };\n    } catch (error) {\n      console.error('Error during TTS:', error);\n      setIsSpeaking(false);\n    }\n  };\n  const handleVoiceToggle = () => {\n    if (listening) {\n      SpeechRecognition.stopListening();\n    } else {\n      resetTranscript();\n      SpeechRecognition.startListening({\n        continuous: false\n      });\n    }\n  };\n  const handleQuestionClick = question => {\n    // setInput(question);\n    onConverStart(question);\n  };\n  useEffect(() => {\n    if (!carouselId) {\n      return;\n    }\n    const fetchModules = async moduleIds => {\n      if (!moduleIds || !Array.isArray(moduleIds) || moduleIds.length === 0) {\n        return;\n      }\n      const {\n        data,\n        error\n      } = await supabase.from('modules').select('*').in('id', moduleIds);\n      if (error) {\n        return;\n      } else {\n        const transformedModules = (data === null || data === void 0 ? void 0 : data.map(item => ({\n          CreatedAt: item.created_at,\n          bannerImageUrl: item.banner_image_url,\n          description: item.description,\n          id: item.id,\n          isActive: item.is_active,\n          name: item.name,\n          posterImageUrl: item.poster_image_url,\n          shortDescription: item.short_description,\n          iceBreakers: item.ice_breakers\n        }))) || [];\n        // setActiveIndex(index);        \n        //   callback(transformedModules[0], []);\n        //   setActiveIndex(transformedModules[0].id);\n        setModules(transformedModules[0].iceBreakers);\n      }\n    };\n    const fetchCarousel = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('carousels').select('*').eq('id', carouselId).single();\n      if (error) {\n        return;\n      }\n      // Defensive: assume modules as array or JSON string\n      let moduleIds = [];\n      if (Array.isArray(data.modules)) {\n        moduleIds = data.modules;\n      } else if (typeof data.modules === 'string') {\n        try {\n          moduleIds = JSON.parse(data.modules);\n        } catch {\n          moduleIds = [];\n        }\n      }\n      await fetchModules(moduleIds);\n    };\n    fetchCarousel();\n  }, [carouselId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"10rem\"\n    },\n    className: `relative flex items-center justify-center z-10 bannerSearch pt-2 ${isActive ? 'active' : ''} mt-20`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatname mb-2\",\n      children: bannerImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"predefineQuestion\",\n      children: modules.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"predefineQues-item\",\n        onClick: () => handleQuestionClick(item),\n        children: item\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scrollableRef,\n      className: \"overflow-y-auto scrollbar-hide chat-anwserScreen\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-1 ${msg.type === \"question\" ? \"border border-yellow-500 text-yellow-500 rounded-[1vw] self-start ques\" : \"bg-[#71717914] backdrop-blur-[145px] mt-3 mb-3 text-white self-end rounded-[1vw] awn\"}`,\n        children: msg.text === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 32\n        }, this) : msg.text\n      }, (msg === null || msg === void 0 ? void 0 : msg.id) || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative p-6 rounded-2xl flex items-center w-full chatsearchbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"soutribeSearch\",\n        onKeyUp: e => {\n          if (e.key === \"Enter\") {\n            onConverStart();\n          }\n        },\n        onChange: e => setInput(e.target.value),\n        type: \"text\",\n        placeholder: \"Type Here\",\n        disabled: fetching,\n        value: input,\n        className: \"flex-1 bg-transparent text-white outline-none placeholder-gray-400 text-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), !isSpeaking ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleVoiceToggle,\n        className: `ml-2 p-2 rounded-full hidden  ${listening ? 'bg-green-500' : 'bg-white'} text-black`,\n        children: \"\\uD83C\\uDFA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsSpeaking(false),\n        className: \"ml-2 p-2 rounded-full bg-red-500 text-white\",\n        children: \"\\u23F9\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: fetching || input === \"\",\n        onClick: () => onConverStart(),\n        className: \"bg-white text-black py-2 px-2 rounded-full hover:bg-gray-100 transition-colors font-medium searchbtn\",\n        children: fetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin border-t-2 border-b-2 border-gray-900 rounded-full w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: searchIcon,\n          alt: \"Search Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchSoulTribe, \"C1YiAwSHzS6NmT+gaq9NIf5sgGo=\", false, function () {\n  return [useSpeechRecognition, useQuery];\n});\n_c = SearchSoulTribe;\nexport default SearchSoulTribe;\nvar _c;\n$RefreshReg$(_c, \"SearchSoulTribe\");","map":{"version":3,"names":["useMutation","useQuery","React","useEffect","useRef","useState","useLocation","v7","uuidv7","searchIcon","soultribeImg","fetchStreamData","SpeechRecognition","useSpeechRecognition","createClient","jsxDEV","_jsxDEV","SearchSoulTribe","chatQuestion","data","relatedQuestions","_s","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","input","setInput","streamedData","setStreamedData","fetching","setFetching","threadId","setThreadId","messages","setMessages","scrollableRef","isActive","setIsActive","streamedChunks","setStreamedChunks","isSpeaking","setIsSpeaking","lastSentByVoice","setLastSentByVoice","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","carouselId","setCarouselId","modules","setModules","bannerImage","moduleId","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","posterImageUrl","id","refetch","queryKey","queryFn","payload","message","stream","response","enabled","onConverStart","customInput","messageToSend","trim","prev","type","text","then","updatedMessages","length","current","scrollTop","scrollHeight","timeoutId","setTimeout","speakResponse","clearTimeout","apiKey","REACT_APP_OPENAI_API_KEY","fetch","method","headers","Authorization","body","JSON","stringify","model","voice","ok","Error","blob","audioUrl","URL","createObjectURL","audio","Audio","play","onended","revokeObjectURL","error","console","handleVoiceToggle","stopListening","startListening","continuous","handleQuestionClick","question","fetchModules","moduleIds","Array","isArray","from","select","in","transformedModules","map","item","CreatedAt","created_at","bannerImageUrl","banner_image_url","description","is_active","name","poster_image_url","shortDescription","short_description","iceBreakers","ice_breakers","fetchCarousel","eq","single","parse","style","marginTop","className","children","key","onClick","ref","msg","index","onKeyUp","e","onChange","target","value","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/angelagu/Downloads/aiyogi-main/src/pages/home/components/SearchSoulTribe3.jsx"],"sourcesContent":["import { useMutation, useQuery } from \"@tanstack/react-query\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { v7 as uuidv7 } from 'uuid';\r\nimport searchIcon from \"../../../assets/images/plane-icon.svg\";\r\nimport soultribeImg from \"../../../assets/images/media.jpg\";\r\nimport { fetchStreamData } from \"../home.api\";\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\nimport { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst SearchSoulTribe = ({ chatQuestion, data, relatedQuestions }) => {\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition\r\n  } = useSpeechRecognition();\r\n\r\n  const [input, setInput] = useState('');\r\n  const [streamedData, setStreamedData] = useState('');\r\n  const [fetching, setFetching] = useState(false);\r\n  const [threadId, setThreadId] = useState(uuidv7());\r\n  const [messages, setMessages] = useState([]);\r\n  const scrollableRef = useRef(null);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [streamedChunks, setStreamedChunks] = useState([]);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [lastSentByVoice, setLastSentByVoice] = useState(false);\r\n  const supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\r\n  const supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\r\n  const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n  const [carouselId, setCarouselId] = useState(\"153714af-4a4d-4d6e-900c-9aae53206523\");\r\n  const [modules, setModules] = useState([]);\r\n\r\n  let bannerImage;\r\n  let moduleId;\r\n  if (data === null) {\r\n    bannerImage = <img src={soultribeImg} alt=\"Default Banner\" />;\r\n    moduleId = '070b458f-fc28-403f-84c7-429b8bff1103';\r\n  } else {\r\n    bannerImage = <img src={data.posterImageUrl} alt=\"Banner\" />;\r\n    moduleId = data.id;\r\n  }\r\n\r\n  const { refetch } = useQuery({\r\n    queryKey: ['streamData'],\r\n    queryFn: async () => {\r\n      setFetching(true);\r\n      const payload = {\r\n        moduleId: moduleId,\r\n        threadId: threadId,\r\n        message: input,\r\n        stream: true\r\n      };\r\n      const response = await fetchStreamData(payload, setStreamedData);\r\n      setFetching(false);\r\n      return response;\r\n    },\r\n    enabled: false,\r\n  });\r\n\r\n  const onConverStart = (customInput = null) => {\r\n    const messageToSend = customInput ?? input;\r\n    if (!messageToSend.trim()) return;\r\n\r\n    setIsActive(true);\r\n    setMessages(prev => [\r\n      ...prev,\r\n      { type: \"question\", text: messageToSend, id: uuidv7() },\r\n      { type: \"answer\", text: \"\", id: uuidv7() },\r\n    ]);\r\n    refetch().then(() => {\r\n      setInput('');\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!listening && transcript.trim()) {\r\n      setLastSentByVoice(true);\r\n      onConverStart(transcript);\r\n      resetTranscript();\r\n    }\r\n  }, [listening, transcript]);\r\n\r\n  useEffect(() => {\r\n    if (streamedData && streamedData !== \"\") {\r\n      setMessages((prev) => {\r\n        const updatedMessages = [...prev];\r\n        updatedMessages[updatedMessages.length - 1] = {\r\n          ...updatedMessages[updatedMessages.length - 1],\r\n          text: streamedData,\r\n        };\r\n        return updatedMessages;\r\n      });\r\n\r\n      if (scrollableRef.current) {\r\n        scrollableRef.current.scrollTop = scrollableRef.current.scrollHeight;\r\n      }\r\n\r\n      if (lastSentByVoice) {\r\n        const timeoutId = setTimeout(() => {\r\n          speakResponse(streamedData);\r\n          setLastSentByVoice(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeoutId);\r\n      }\r\n    }\r\n  }, [streamedData]);\r\n\r\n  // 🔥 Updated speakResponse function (uses OpenAI TTS)\r\n  const speakResponse = async (text) => {\r\n    try {\r\n      const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\r\n  \r\n      const response = await fetch('https://api.openai.com/v1/audio/speech', {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiKey}`,\r\n        },\r\n        body: JSON.stringify({\r\n          model: \"tts-1\", // correct model\r\n          input: text,\r\n          voice: \"coral\"\r\n        }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('TTS API request failed');\r\n      }\r\n  \r\n      const blob = await response.blob();\r\n      const audioUrl = URL.createObjectURL(blob);\r\n  \r\n      const audio = new Audio(audioUrl);\r\n      audio.play();\r\n      setIsSpeaking(true);\r\n  \r\n      audio.onended = () => {\r\n        setIsSpeaking(false);\r\n        URL.revokeObjectURL(audioUrl); // cleanup\r\n      };\r\n    } catch (error) {\r\n      console.error('Error during TTS:', error);\r\n      setIsSpeaking(false);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleVoiceToggle = () => {\r\n    if (listening) {\r\n      SpeechRecognition.stopListening();\r\n    } else {\r\n      resetTranscript();\r\n      SpeechRecognition.startListening({ continuous: false });\r\n    }\r\n  };\r\n\r\n  const handleQuestionClick = (question) => {\r\n    // setInput(question);\r\n    onConverStart(question);\r\n  };\r\n    useEffect(() => {\r\n      if (!carouselId) {\r\n        return;\r\n      }\r\n  \r\n      const fetchModules = async (moduleIds) => {\r\n        if (!moduleIds || !Array.isArray(moduleIds) || moduleIds.length === 0) {\r\n          return;\r\n        }\r\n        const { data, error } = await supabase\r\n          .from('modules')\r\n          .select('*')\r\n          .in('id', moduleIds);\r\n  \r\n        if (error) {\r\n            return\r\n        } else {\r\n          const transformedModules = data?.map(item => ({\r\n            CreatedAt: item.created_at,\r\n            bannerImageUrl: item.banner_image_url,\r\n            description: item.description,\r\n            id: item.id,\r\n            isActive: item.is_active,\r\n            name: item.name,\r\n            posterImageUrl: item.poster_image_url,\r\n            shortDescription: item.short_description,\r\n            iceBreakers: item.ice_breakers,\r\n          })) || [];\r\n          // setActiveIndex(index);        \r\n        //   callback(transformedModules[0], []);\r\n        //   setActiveIndex(transformedModules[0].id);\r\n          setModules(transformedModules[0].iceBreakers);\r\n        }\r\n      };\r\n  \r\n      const fetchCarousel = async () => {\r\n        const { data, error } = await supabase\r\n          .from('carousels')\r\n          .select('*')\r\n          .eq('id', carouselId)\r\n          .single();\r\n  \r\n        if (error) {\r\n          return;\r\n        }\r\n        // Defensive: assume modules as array or JSON string\r\n        let moduleIds = [];\r\n        if (Array.isArray(data.modules)) {\r\n          moduleIds = data.modules;\r\n        } else if (typeof data.modules === 'string') {\r\n          try { moduleIds = JSON.parse(data.modules); } catch { moduleIds = []; }\r\n        }\r\n        await fetchModules(moduleIds);\r\n      };\r\n  \r\n      fetchCarousel();\r\n    }, [carouselId]);\r\n\r\n  return (\r\n    <div style={{marginTop: \"10rem\"}} className={`relative flex items-center justify-center z-10 bannerSearch pt-2 ${isActive ? 'active' : ''} mt-20`}>\r\n      <div className=\"chatname mb-2\">\r\n        {bannerImage}\r\n      </div>\r\n      <div className=\"predefineQuestion\">\r\n        {modules.map((item, key) => \r\n            <div className=\"predefineQues-item\" key={key} onClick={() => handleQuestionClick(item)}>{item}</div>\r\n        )}\r\n        {/* <div className=\"predefineQues-item\" onClick={() => handleQuestionClick('what is your legacy, lol!?')}>what is your legacy, lol!?</div>\r\n        <div className=\"predefineQues-item\" onClick={() => handleQuestionClick('Do you remember your dreams?')}>Do you remember your dreams?</div>\r\n        <div className=\"predefineQues-item\" onClick={() => handleQuestionClick('WHO LOVES YA?!')}>WHO LOVES YA?!</div> */}\r\n      </div>\r\n      <div ref={scrollableRef} className=\"overflow-y-auto scrollbar-hide chat-anwserScreen\">\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={msg?.id || index}\r\n            className={`p-1 ${msg.type === \"question\" ? \"border border-yellow-500 text-yellow-500 rounded-[1vw] self-start ques\" : \"bg-[#71717914] backdrop-blur-[145px] mt-3 mb-3 text-white self-end rounded-[1vw] awn\"}`}\r\n          >\r\n            {msg.text === \"\" ? <div className=\"loader\"></div> : msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"relative p-6 rounded-2xl flex items-center w-full chatsearchbar\">\r\n        <input\r\n          id=\"soutribeSearch\"\r\n          onKeyUp={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              onConverStart();\r\n            }\r\n          }}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          type=\"text\"\r\n          placeholder=\"Type Here\"\r\n          disabled={fetching}\r\n          value={input}\r\n          className=\"flex-1 bg-transparent text-white outline-none placeholder-gray-400 text-lg\"\r\n        />\r\n\r\n        {!isSpeaking ? (\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleVoiceToggle}\r\n            className={`ml-2 p-2 rounded-full hidden  ${listening ? 'bg-green-500' : 'bg-white'} text-black`}\r\n          >\r\n            🎤\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={() => setIsSpeaking(false)}\r\n            className=\"ml-2 p-2 rounded-full bg-red-500 text-white\"\r\n          >\r\n            ⏹️\r\n          </button>\r\n        )}\r\n\r\n        <button\r\n          disabled={fetching || input === \"\"}\r\n          onClick={() => onConverStart()}\r\n          className=\"bg-white text-black py-2 px-2 rounded-full hover:bg-gray-100 transition-colors font-medium searchbtn\"\r\n        >\r\n          {fetching ? (\r\n            <div className=\"animate-spin border-t-2 border-b-2 border-gray-900 rounded-full w-5 h-5\"></div>\r\n          ) : (\r\n            <img src={searchIcon} alt=\"Search Icon\" />\r\n          )}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchSoulTribe;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}