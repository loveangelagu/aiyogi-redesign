{"ast":null,"code":"var _jsxFileName = \"/Users/angelagu/Downloads/aiyogi-main/src/pages/home/components/soulTribe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BeginnerPath = ({\n  data,\n  callback\n}) => {\n  _s();\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const containerRef = useRef(null);\n  const handleScroll = () => {\n    if (containerRef.current) {\n      const scrollLeft = containerRef.current.scrollLeft;\n      setScrollPosition(scrollLeft);\n    }\n  };\n  const dummyQuestion = [{\n    question: [\"what is your legacy, lol!?\", \"Do you remember your dreams?\", \"WHO LOVES YA?!\"]\n  }, {\n    question: [\"What happens when a Kundalini awakening goes wrong?\", \"How can I stay grounded during a kundalini crisis?\", \"How do I navigate the line between madness and enlightenment?\"]\n  }, {\n    question: [\"question 3?\", \"question 3?\", \"question 3?\"]\n  }, {\n    question: [\"Tell me of how your meditation practice is progressing?\", \"Describe your meditation sessions.\"]\n  }, {\n    question: [\"Superpowers to avoid using, & Shifts in consciousness from cleansing?\", \"Why cleanse and what does it mean?\", \"The Ultimate?\"]\n  }, {\n    question: [\"question 6?\", \"question 6?\", \"question 6?\"]\n  }, {\n    question: [\"I see my Ex everywhere!?\", \"I  can let go!\", \"Its so hard help me.\"]\n  }, {\n    question: [\"question 8?\", \"question 8?\", \"question 8?\"]\n  }, {\n    question: [\"question 9?\", \"question 9?\", \"question 9?\"]\n  }, {\n    question: [\"question 10?\", \"question 10?\", \"question 10?\"]\n  }];\n  const settings = {\n    infinite: true,\n    speed: 500,\n    arrows: false,\n    slidesToShow: 7,\n    slidesToScroll: 1,\n    centerMode: true,\n    focusOnSelect: true,\n    centerPadding: \"0\",\n    autoplay: true,\n    responsive: [{\n      breakpoint: 991,\n      settings: {\n        slidesToShow: 5,\n        slidesToScroll: 1\n      }\n    }, {\n      breakpoint: 767,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        centerPadding: \"30\"\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-textwhite text-center m-2 font-bold\",\n      children: \"BEGINNER'S PATH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-0 left-0 right-0 overflow-x-auto relative\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"head-slide-lists\",\n        onScroll: handleScroll,\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          ...settings,\n          children: data.map((item, index) => {\n            const relatedQuestions = dummyQuestion[index] || [];\n            // if (!item?.bannerImageUrl) return null;\n\n            // // Calculate the item's position relative to the center\n            // const itemWidth = 160; // Adjust based on your item's width (w-40 = 160px)\n            // const itemOffset = index * (itemWidth + 16); // 16px is the margin (m-2 = 8px on each side)\n            // const containerCenter = (containerRef.current?.clientWidth || 0) / 2;\n            // const distanceFromCenter = Math.abs(\n            //   itemOffset - scrollPosition + itemWidth / 2 - containerCenter\n            // );\n\n            // // Calculate scale based on distance from center\n            // const maxScale = 1.2; // Maximum scale for the center item\n            // const minScale = 0.8; // Minimum scale for the side items\n            // const scale = Math.max(\n            //   minScale,\n            //   maxScale - (distanceFromCenter / containerCenter) * (maxScale - minScale)\n            // );\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"head-slide-item\",\n              onClick: () => callback(item, relatedQuestions),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.bannerImageUrl,\n                alt: `Avatar ${index}`,\n                className: \"w-full h-full object-cover rounded-lg shadow-2xl shadow-white/90\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BeginnerPath, \"d/ys9DrKRazv5yUCXLUhsPKCuQU=\");\n_c = BeginnerPath;\nexport default BeginnerPath;\nvar _c;\n$RefreshReg$(_c, \"BeginnerPath\");","map":{"version":3,"names":["React","useState","useRef","Slider","jsxDEV","_jsxDEV","Fragment","_Fragment","BeginnerPath","data","callback","_s","scrollPosition","setScrollPosition","containerRef","handleScroll","current","scrollLeft","dummyQuestion","question","settings","infinite","speed","arrows","slidesToShow","slidesToScroll","centerMode","focusOnSelect","centerPadding","autoplay","responsive","breakpoint","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","onScroll","map","item","index","relatedQuestions","onClick","src","bannerImageUrl","alt","_c","$RefreshReg$"],"sources":["/Users/angelagu/Downloads/aiyogi-main/src/pages/home/components/soulTribe.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\"; \r\nconst BeginnerPath = ({ data, callback }) => {\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n  const containerRef = useRef(null);\r\n\r\n  const handleScroll = () => {\r\n    if (containerRef.current) {\r\n      const scrollLeft = containerRef.current.scrollLeft;\r\n      setScrollPosition(scrollLeft);\r\n    }\r\n  };\r\n  const dummyQuestion = [\r\n    { question: [\r\n      \"what is your legacy, lol!?\",\r\n      \"Do you remember your dreams?\",\r\n      \"WHO LOVES YA?!\"\r\n    ] },\r\n    { question: [\r\n      \"What happens when a Kundalini awakening goes wrong?\",\r\n      \"How can I stay grounded during a kundalini crisis?\",\r\n      \"How do I navigate the line between madness and enlightenment?\"\r\n    ] },\r\n    { question: [\r\n      \"question 3?\",\r\n      \"question 3?\",\r\n      \"question 3?\"\r\n    ] },\r\n    { question: [\r\n      \"Tell me of how your meditation practice is progressing?\",\r\n      \"Describe your meditation sessions.\"\r\n    ] },{ question: [\r\n      \"Superpowers to avoid using, & Shifts in consciousness from cleansing?\",\r\n      \"Why cleanse and what does it mean?\",\r\n      \"The Ultimate?\"\r\n    ] },{ question: [\r\n      \"question 6?\",\r\n      \"question 6?\",\r\n      \"question 6?\"\r\n    ] },{ question: [\r\n      \"I see my Ex everywhere!?\",\r\n      \"I  can let go!\",\r\n      \"Its so hard help me.\"\r\n    ] },{ question: [\r\n      \"question 8?\",\r\n      \"question 8?\",\r\n      \"question 8?\"\r\n    ] },{ question: [\r\n      \"question 9?\",\r\n      \"question 9?\",\r\n      \"question 9?\"\r\n    ] },{ question: [\r\n      \"question 10?\",\r\n      \"question 10?\",\r\n      \"question 10?\"\r\n    ] }\r\n  ];\r\n  const settings = {\r\n    infinite: true,\r\n    speed: 500,\r\n    arrows: false,\r\n    slidesToShow: 7,\r\n    slidesToScroll: 1,\r\n    centerMode: true,\r\n    focusOnSelect: true,\r\n    centerPadding: \"0\",\r\n    autoplay: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 991,\r\n        settings: {\r\n          slidesToShow: 5,\r\n          slidesToScroll: 1\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 767,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 1\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n          centerPadding: \"30\",\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p className=\"text-textwhite text-center m-2 font-bold\">BEGINNER'S PATH</p>\r\n      <div className=\"bottom-0 left-0 right-0 overflow-x-auto relative\">\r\n        <div\r\n          ref={containerRef}\r\n          className=\"head-slide-lists\"\r\n          onScroll={handleScroll}\r\n        >\r\n          <Slider {...settings}>\r\n          {data.map((item, index) => {\r\n             const relatedQuestions = dummyQuestion[index] || [];\r\n            // if (!item?.bannerImageUrl) return null;\r\n\r\n            // // Calculate the item's position relative to the center\r\n            // const itemWidth = 160; // Adjust based on your item's width (w-40 = 160px)\r\n            // const itemOffset = index * (itemWidth + 16); // 16px is the margin (m-2 = 8px on each side)\r\n            // const containerCenter = (containerRef.current?.clientWidth || 0) / 2;\r\n            // const distanceFromCenter = Math.abs(\r\n            //   itemOffset - scrollPosition + itemWidth / 2 - containerCenter\r\n            // );\r\n\r\n            // // Calculate scale based on distance from center\r\n            // const maxScale = 1.2; // Maximum scale for the center item\r\n            // const minScale = 0.8; // Minimum scale for the side items\r\n            // const scale = Math.max(\r\n            //   minScale,\r\n            //   maxScale - (distanceFromCenter / containerCenter) * (maxScale - minScale)\r\n            // );\r\n\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"head-slide-item\"\r\n                onClick={() => callback(item, relatedQuestions)}\r\n              >\r\n                <img\r\n                  src={item.bannerImageUrl}\r\n                  alt={`Avatar ${index}`}\r\n                  className=\"w-full h-full object-cover rounded-lg shadow-2xl shadow-white/90\"\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n          </Slider>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BeginnerPath;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}