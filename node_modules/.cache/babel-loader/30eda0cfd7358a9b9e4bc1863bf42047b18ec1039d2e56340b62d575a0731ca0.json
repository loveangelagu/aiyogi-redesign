{"ast":null,"code":"var _jsxFileName = \"/Users/angelagu/Downloads/aiyogi-main/src/pages/home/components/StartVoiceSessionButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GPTVoiceAssistant = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [sessionId, setSessionId] = useState(null);\n  const [responseText, setResponseText] = useState(\"\");\n  const [processing, setProcessing] = useState(false);\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  const speak = text => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    speechSynthesis.speak(utterance);\n  };\n  const startVoiceSession = async () => {\n    setLoading(true);\n    setResponseText(\"\");\n    resetTranscript();\n    try {\n      const res = await fetch(\"https://aiyogi-backend-api.cto-5ca.workers.dev/public/startVoiceSession\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          moduleId: \"070b458f-fc28-403f-84c7-429b8bff1103\"\n        })\n      });\n      if (!res.ok) throw new Error(\"Failed to start voice session\");\n      const data = await res.json();\n      setSessionId(data.sessionId); // Assuming API gives sessionId\n      setLoading(false);\n      SpeechRecognition.startListening({\n        continuous: false\n      });\n    } catch (err) {\n      console.error(err);\n      setResponseText(\"Error: \" + err.message);\n      setLoading(false);\n    }\n  };\n  const sendTranscriptToGPT = async () => {\n    SpeechRecognition.stopListening();\n    setProcessing(true);\n    try {\n      const res = await fetch(\"https://aiyogi-backend-api.cto-5ca.workers.dev/public/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessionId: sessionId,\n          query: transcript\n        })\n      });\n      const data = await res.json();\n      setResponseText(data.response);\n      speak(data.response);\n    } catch (err) {\n      console.error(err);\n      setResponseText(\"Error: \" + err.message);\n      speak(\"Something went wrong.\");\n    } finally {\n      setProcessing(false);\n      resetTranscript();\n    }\n  };\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your browser doesn\\u2019t support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sessionId ? sendTranscriptToGPT : startVoiceSession,\n      disabled: loading || processing,\n      className: \"px-6 py-3 bg-green-600 text-white font-bold rounded hover:bg-green-700 transition\",\n      children: loading ? \"Starting...\" : processing ? \"Thinking...\" : sessionId ? \"Ask AI\" : \"Start Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 max-w-xl mx-auto bg-gray-50 p-4 rounded shadow text-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83C\\uDFA7 Listening:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 20\n        }, this), \" \", listening ? \"Yes\" : \"No\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83D\\uDDE3 You:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }, this), \" \", transcript]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83E\\uDD16 GPT:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }, this), \" \", responseText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(GPTVoiceAssistant, \"KEUGwtsl5uszhDgSuOy75AU8nQw=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = GPTVoiceAssistant;\nexport default GPTVoiceAssistant;\nvar _c;\n$RefreshReg$(_c, \"GPTVoiceAssistant\");","map":{"version":3,"names":["React","useState","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","GPTVoiceAssistant","_s","loading","setLoading","sessionId","setSessionId","responseText","setResponseText","processing","setProcessing","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","speak","text","utterance","SpeechSynthesisUtterance","speechSynthesis","startVoiceSession","res","fetch","method","headers","body","JSON","stringify","moduleId","ok","Error","data","json","startListening","continuous","err","console","error","message","sendTranscriptToGPT","stopListening","query","response","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/angelagu/Downloads/aiyogi-main/src/pages/home/components/StartVoiceSessionButton.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\r\n\r\nconst GPTVoiceAssistant = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [sessionId, setSessionId] = useState(null);\r\n    const [responseText, setResponseText] = useState(\"\");\r\n    const [processing, setProcessing] = useState(false);\r\n\r\n    const {\r\n        transcript,\r\n        listening,\r\n        resetTranscript,\r\n        browserSupportsSpeechRecognition\r\n    } = useSpeechRecognition();\r\n\r\n    const speak = (text) => {\r\n        const utterance = new SpeechSynthesisUtterance(text);\r\n        speechSynthesis.speak(utterance);\r\n    };\r\n\r\n    const startVoiceSession = async () => {\r\n        setLoading(true);\r\n        setResponseText(\"\");\r\n        resetTranscript();\r\n\r\n        try {\r\n            const res = await fetch(\"https://aiyogi-backend-api.cto-5ca.workers.dev/public/startVoiceSession\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    moduleId: \"070b458f-fc28-403f-84c7-429b8bff1103\"\r\n                })\r\n            });\r\n\r\n            if (!res.ok) throw new Error(\"Failed to start voice session\");\r\n\r\n            const data = await res.json();\r\n            setSessionId(data.sessionId); // Assuming API gives sessionId\r\n            setLoading(false);\r\n            SpeechRecognition.startListening({ continuous: false });\r\n        } catch (err) {\r\n            console.error(err);\r\n            setResponseText(\"Error: \" + err.message);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const sendTranscriptToGPT = async () => {\r\n        SpeechRecognition.stopListening();\r\n        setProcessing(true);\r\n\r\n        try {\r\n            const res = await fetch(\"https://aiyogi-backend-api.cto-5ca.workers.dev/public/ask\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    sessionId: sessionId,\r\n                    query: transcript\r\n                })\r\n            });\r\n\r\n            const data = await res.json();\r\n            setResponseText(data.response);\r\n            speak(data.response);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setResponseText(\"Error: \" + err.message);\r\n            speak(\"Something went wrong.\");\r\n        } finally {\r\n            setProcessing(false);\r\n            resetTranscript();\r\n        }\r\n    };\r\n\r\n    if (!browserSupportsSpeechRecognition) {\r\n        return <p>Your browser doesnâ€™t support speech recognition.</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-6 text-center\">\r\n            <button\r\n                onClick={sessionId ? sendTranscriptToGPT : startVoiceSession}\r\n                disabled={loading || processing}\r\n                className=\"px-6 py-3 bg-green-600 text-white font-bold rounded hover:bg-green-700 transition\"\r\n            >\r\n                {loading\r\n                    ? \"Starting...\"\r\n                    : processing\r\n                    ? \"Thinking...\"\r\n                    : sessionId\r\n                    ? \"Ask AI\"\r\n                    : \"Start Assistant\"}\r\n            </button>\r\n\r\n            <div className=\"mt-6 max-w-xl mx-auto bg-gray-50 p-4 rounded shadow text-left\">\r\n                <p><strong>ðŸŽ§ Listening:</strong> {listening ? \"Yes\" : \"No\"}</p>\r\n                <p className=\"mt-2\"><strong>ðŸ—£ You:</strong> {transcript}</p>\r\n                <p className=\"mt-4\"><strong>ðŸ¤– GPT:</strong> {responseText}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GPTVoiceAssistant;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}